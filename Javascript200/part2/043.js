var person = 'harin';

function print() {
  var person2 = 'jay';

	function innerPrint() {
    console.log(person);
    console.log(person2);
  }
	
	innerPrint();

	console.log('print finished');
}

print();
console.log('finished');
/*
스코프 체인

실행 컨텍스트 : 코드가 실행되기 위해 필요한 정보를 가지고 있음. 실행 가능한 코드가 실행될 때 생성.
대표적인 실행 가능한 코드는 전역 코드와 함수 코드. 그 외에 eval과 모듈 코드도 있음.

처음에는 전역 코드가 먼저 실행. 이때 전역 컨테스트를 만들고 전역 코드를 순차적으로 평가.
그러다 함수가 호출문을 만나면 새로운 실행 컨텍스트가 만들어지면서 해당 함수 실행부의 코드를 순차적으로 평가.
이때 스택을 이용해 실행 컨텍스트를 관리하게 되는데, 새로운 실행 컨텍스트가 생성되면 스택에 쌓고 실행 중인 코드가 종료되면 해당 실행 컨텍스트를 스택에서 제거

실행 컨텍스트는 렉시컬 환경을 가지고 있음. 렉시컬 환경은 환경 레코드와 외부 렉시컬 환경으로 구성. 

실제 함수와 변수같은 식별자와 그 식별자가 가리키는 값은 키와 값의 쌍으로 환경 레코드에 기록. 그리고 렉시컬 환경은 환경 레코드 외에 자신의 실행 환경을 감싸는 외부 실행 환경에
대한 참조를 가지고 있음.

각 실행 컨텍스트는 outerLexicalEnvironment로 체인처럼 연결.
각 렉시컬 환경이 연결되어 있기 때문에 스코프 체인이 형성 가능.
*/